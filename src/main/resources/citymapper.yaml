swagger: '2.0'

info:
  title: Citymapper API
  description: Citymapper API
  version: "1.0.0"

# the domain of the service
host: developer.citymapper.com

# array of all schemes that your API supports
schemes:
  - https

# will be prefixed to all paths
basePath: /api/1

securityDefinitions:
  apikey:
    type: apiKey
    name: key
    in: query

produces:
  - application/json

paths:
  /traveltime/:
    get:
      summary: Travel Time
      description: |
        Transit travel time between two locations.
      parameters:
      - name: startcoord
        in: query
        description: The geographical start point of the trip, in WGS84 'latitude,longitude' format.
        required: true
        type: string
      - name: endcoord
        in: query
        description: The geographical end point of the trip, in WGS84 'latitude,longitude' format.
        required: true
        type: string
      - name: time
        in: query
        description: A date & time in ISO-8601 format, including time zone information. If omitted, the travel time is computed for travel at the time of the request. Results should be most reliable for -1 and +7 days from the current time, but times further in the future should give reasonable times (not accounting for any holiday schedules).
        required: false
        type: string
      - name: time_type
        in: query
        description: If 'time' is provided, a 'time_type' must be provided as well. At the moment, the only defined 'time_type' value is 'arrival', which computes the travel time for arriving at the 'endcoord' at the given time.
        required: false
        type: string
      security:
        - apikey: []
      tags:
        - TravelTime
      responses:
        200:
          description: Travel time
          schema:
            $ref: '#/definitions/TravelTime'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /singlepointcoverage/:
   get:
      summary: Singe Point Coverage
      description: |
        Determines whether a single point falls within Citymapper's coverage areas. Callers are welcome to cache coverage results, though negative results should not be cached for more than 24 hours to ensure that when new coverage areas are launched by Citymapper, they are quickly reflected in the external app.
      parameters:
      - name: coord
        in: query
        description: The geographical coordinates of the point to be tested, in WGS84 'latitude,longitude' form
        required: true
        type: string
      security:
        - apikey: []
      tags:
        - Coverage
      responses:
        200:
          description: Point on the map
          schema:
            $ref: '#/definitions/Coverage'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /coverage/:
     post:
        consumes:
          - application/json
        summary: Coverage for multiple points
        description: |
          Checks multiple points to see which ones fall within Citymapper's coverage areas. Callers are welcome to cache coverage results, though negative results should not be cached for more than 24 hours to ensure that when new coverage areas are launched by Citymapper, they are quickly reflected in the external app.
        parameters:
        - name: body
          in: body
          description: The post should contain an application/json body. In this example, 'coord' is an array containing WGS84 latitude and longitude values, and 'id' is an optional ID to be mirrored back in the response for matching with other data from the caller.
          required: true
          schema:
            $ref: '#/definitions/Coverage'
        security:
          - apikey: []
        tags:
          - Coverage
        responses:
          200:
            description: Point on the map
            schema:
              $ref: '#/definitions/Coverage'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

definitions:
  TravelTime:
    properties:
      travel_time_minutes:
        type: integer
        format: int32
        description: The travel time in minutes from the starting coordinated to the ending coordinates
      diagnostic:
        $ref: '#/definitions/Diagnostic'
  Diagnostic:
    properties:
      milliseconds:
        type: integer
        format: int32
        description: Time in milliseconds
  Coverage:
    properties:
      points:
        type: array
        items:
          $ref: '#/definitions/Point'
    example: { "points": [ { "coord": [40.1, -73.0], "id": "test1" }, { "coord": [37.784, -122.402] }, { "coord": [41.84, -73], "id": "test2" }, { "id": "test3" } ] }

  Point:
    required:
      - coord
    properties:
      covered:
        type: boolean
        description: Coverage result
      coord:
        type: array
        items:
          type: number
          format: double
        description: An array containing two values - Longitude and latitude
      id:
        type: string
        description: Point identifier that is bounced back and forth.

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
